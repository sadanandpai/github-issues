{"version":3,"sources":["store/issuesSlice.js","components/Pagination.jsx","components/RowInfo.jsx","components/Table.jsx","pages/Issues.jsx","pages/IssuesDetails.jsx","App.js","reportWebVitals.js","store/store.js","index.js"],"names":["issuesSlice","createSlice","name","initialState","activePageNumber","count","totalPages","dataStore","currentPageData","reducers","setActivePageNumber","state","payload","setIssuesCount","setTotalPages","setDataStore","pageNumber","data","setDataToDisplay","getIssuesCount","a","fetch","response","json","open_issues_count","getIssuesByPage","actions","App","dispatch","useDispatch","history","useHistory","issues","useSelector","items","ellipsis","includes","push","Pagination","Item","active","data-page-number","Ellipsis","onClick","event","pageDataLabel","target","closest","getAttribute","First","Prev","Next","Last","styled","div","IssueTitle","IssueDetail","Label","span","props","color","RowInfo","page","index","issue","labels","to","title","map","label","ReactTimeAgo","date","Date","created_at","locale","user","login","IssueTable","IssueRow","IconHolder","Table","useParams","FlexRowCenter","Issues","useEffect","getState","style","alignItems","height","Spinner","animation","role","className","DetailContainer","Title","Info","Details","ReactMarkdown","IssuesDetails","id","body","totalIssues","Math","ceil","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","issuesReducer","TimeAgo","addDefaultLocale","en","ReactDOM","render","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a71fe77d.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst perPageResultCount = 10;\r\n\r\nexport const issuesSlice = createSlice({\r\n  name: 'issues',\r\n  initialState: {\r\n    activePageNumber: 1,\r\n    count: 0,\r\n    totalPages: 0,\r\n    dataStore: {},\r\n    currentPageData: [],\r\n  },\r\n  reducers: {\r\n    setActivePageNumber: (state, { payload }) => {\r\n      state.activePageNumber = payload;\r\n    },\r\n    setIssuesCount: (state, { payload }) => {\r\n      state.count = payload;\r\n    },\r\n    setTotalPages: (state, { payload }) => {\r\n      state.totalPages = payload;\r\n    },\r\n    setDataStore: (state, { payload }) => {\r\n      state.dataStore[payload.pageNumber] = payload.data;\r\n    },\r\n    setDataToDisplay: (state, { payload }) => {\r\n      state.currentPageData = state.dataStore[payload];\r\n    },\r\n  },\r\n});\r\n\r\nconst setDataToDisplayAsync = (pageNumber) => async (dispatch, getState) => {\r\n  const state = getState();\r\n  if (state.issues.dataStore?.[pageNumber]) {\r\n    dispatch(setDataToDisplay(pageNumber));\r\n  } else {\r\n    const data = await getIssuesByPage(pageNumber);\r\n    dispatch(setDataStore({ pageNumber, data: data }));\r\n  }\r\n};\r\n\r\nconst getTotalPagesAsync = () => async (dispatch) => {\r\n  const totalIssues = await getIssuesCount();\r\n  dispatch(setIssuesCount(totalIssues));\r\n  dispatch(setTotalPages(Math.ceil(totalIssues / perPageResultCount)));\r\n};\r\n\r\nasync function getIssuesCount() {\r\n  const response = await fetch('https://api.github.com/repos/facebook/create-react-app');\r\n  const data = await response.json();\r\n  return data.open_issues_count;\r\n  // return 950;\r\n}\r\n\r\nasync function getIssuesByPage(pageNumber) {\r\n  const response = await fetch(\r\n    `https://api.github.com/repos/facebook/create-react-app/issues?state=open&per_page=${perPageResultCount}&page=${pageNumber}`,\r\n  );\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport default issuesSlice.reducer;\r\nexport const { setActivePageNumber, setIssuesCount, setTotalPages, setDataStore, setDataToDisplay } = issuesSlice.actions;\r\nexport { setDataToDisplayAsync, getTotalPagesAsync };\r\nexport const selectLayout = (state) => state.value;\r\n","import React from \"react\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { setActivePageNumber } from \"../store/issuesSlice\";\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const issues = useSelector((state) => state.issues);\r\n  const activePageNumber = issues.activePageNumber;\r\n  const totalPages = issues.totalPages;\r\n\r\n  function onPageClick(event) {\r\n    const pageDataLabel = event.target.closest(\"[data-page-number]\")?.getAttribute(\"data-page-number\");\r\n    if (pageDataLabel) {\r\n      let pageNumber;\r\n      if (pageDataLabel === \"first\") pageNumber = 1;\r\n      else if (pageDataLabel === \"last\") pageNumber = totalPages;\r\n      else if (pageDataLabel === \"previous\") pageNumber = activePageNumber > 1 ? activePageNumber - 1 : activePageNumber;\r\n      else if (pageDataLabel === \"next\") pageNumber = activePageNumber < totalPages ? activePageNumber + 1 : activePageNumber;\r\n      else pageNumber = pageDataLabel;\r\n\r\n      dispatch(setActivePageNumber(+pageNumber));\r\n      history.push(\"/issues/\" + pageNumber);\r\n    }\r\n  }\r\n\r\n  let items = [];\r\n  let ellipsis = true;\r\n  for (let pageNumber = 1; pageNumber <= totalPages; pageNumber++) {\r\n    if ([1, 2, activePageNumber - 1, activePageNumber, activePageNumber + 1, totalPages - 1, +totalPages, activePageNumber].includes(pageNumber)) {\r\n      items.push(\r\n        <Pagination.Item key={pageNumber} active={pageNumber === activePageNumber} data-page-number={pageNumber}>\r\n          {pageNumber}\r\n        </Pagination.Item>\r\n      );\r\n      ellipsis = false;\r\n    } else if (!ellipsis) {\r\n      ellipsis = true;\r\n      items.push(<Pagination.Ellipsis key={pageNumber} />);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Pagination onClick={onPageClick}>\r\n      <Pagination.First data-page-number=\"first\" />\r\n      <Pagination.Prev data-page-number=\"previous\" />\r\n      {items}\r\n      <Pagination.Next data-page-number=\"next\" />\r\n      <Pagination.Last data-page-number=\"last\" />\r\n    </Pagination>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactTimeAgo from \"react-time-ago\";\r\n\r\nconst IssueRow = styled.div`\r\n  border: 1px solid rgba(0, 0, 0, 0.05);\r\n  padding: 5px 10px;\r\n  min-height: 40px;\r\n  display: flex;\r\n\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.05);\r\n  }\r\n`;\r\n\r\nconst IssueTitle = styled.div`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst IssueDetail = styled.div`\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst Label = styled.span`\r\n  background-color: ${(props) => \"#\" + props.color};\r\n  border-radius: 10px;\r\n  padding: 0 5px;\r\n  margin: 0 5px;\r\n  font-size: 0.8rem;\r\n  vertical-align: top;\r\n  padding-bottom: 2px;\r\n  font-weight: 500;\r\n`;\r\n\r\nexport default function RowInfo({ page, index, issue, labels }) {\r\n  return (\r\n    <div>\r\n      <IssueTitle>\r\n        <Link to={`/issues/${page}/details/${index}`}>{issue.title}</Link>\r\n        {issue.labels.map((label) => (\r\n          <Label color={label.color} key={label.name}>\r\n            {label.name}\r\n          </Label>\r\n        ))}\r\n      </IssueTitle>\r\n      <IssueDetail>\r\n        Opened <ReactTimeAgo date={new Date(issue.created_at)} locale=\"en-US\" /> by {issue.user.login}\r\n      </IssueDetail>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { GoIssueOpened } from \"react-icons/go\";\r\n\r\nimport RowInfo from \"./RowInfo\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst IssueTable = styled.div`\r\n  border: 1px solid rgba(0, 0, 0, 0.15);\r\n  border-radius: 10px;\r\n  margin: 10px;\r\n  background-color: rgba(0, 0, 0, 0.05);\r\n`;\r\n\r\nconst IssueRow = styled.div`\r\n  border: 1px solid rgba(0, 0, 0, 0.05);\r\n  padding: 5px 10px;\r\n  min-height: 40px;\r\n  display: flex;\r\n\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.05);\r\n  }\r\n`;\r\n\r\nconst IconHolder = styled.div`\r\n  margin: 0 5px;\r\n  color: green;\r\n`;\r\n\r\nexport default function Table({ data }) {\r\n  let { page = 1 } = useParams();\r\n  const issues = useSelector((state) => state.issues);\r\n\r\n  return (\r\n    <IssueTable>\r\n      <IssueRow>{issues.count} Open</IssueRow>\r\n      {data?.map((issue, index) => (\r\n        <IssueRow key={issue.title}>\r\n          <IconHolder>\r\n            <GoIssueOpened />\r\n          </IconHolder>\r\n          <RowInfo page={page} index={index} issue={issue} />\r\n        </IssueRow>\r\n      ))}\r\n    </IssueTable>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { setDataToDisplayAsync } from \"../store/issuesSlice\";\r\nimport styled from \"styled-components\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nimport Pagination from \"../components/Pagination\";\r\nimport Table from \"../components/Table\";\r\n\r\nconst FlexRowCenter = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default function Issues() {\r\n  const dispatch = useDispatch();\r\n  let { page = 1 } = useParams();\r\n  const issues = useSelector((state) => state.issues);\r\n\r\n  useEffect(() => {\r\n    dispatch(setDataToDisplayAsync(page));\r\n  }, [page]);\r\n\r\n  return (\r\n    <>\r\n      <FlexRowCenter>\r\n        <h3>Github Open Issues Portal for Create-React-App</h3>\r\n      </FlexRowCenter>\r\n\r\n      {issues.dataStore[issues.activePageNumber] ? (\r\n        <>\r\n          <Table data={issues.dataStore[issues.activePageNumber]} />\r\n          <FlexRowCenter>\r\n            <Pagination />\r\n          </FlexRowCenter>\r\n        </>\r\n      ) : (\r\n        <FlexRowCenter style={{ alignItems: \"center\", height: \"100vh\" }}>\r\n          <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </Spinner>\r\n        </FlexRowCenter>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport ReactTimeAgo from \"react-time-ago\";\r\n\r\nconst DetailContainer = styled.div`\r\n  margin: 10px 25px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 2rem;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  font-size: 0.8rem;\r\n`;\r\n\r\nconst Details = styled(ReactMarkdown)`\r\n  border: 1px solid rgba(0, 0, 0, 0.2);\r\n  padding: 20px;\r\n\r\n  & * {\r\n    font-size: 1rem;\r\n  }\r\n\r\n  img {\r\n    max-width: 100%;\r\n  }\r\n`;\r\n\r\nexport default function IssuesDetails() {\r\n  let { page, id } = useParams();\r\n  const issues = useSelector((state) => state.issues);\r\n  const issue = issues.dataStore[page]?.[id];\r\n\r\n  return (\r\n    <DetailContainer>\r\n      <Title>{issue?.title}</Title>\r\n      <Info>\r\n        {issue.user.login} opened this issue <ReactTimeAgo date={new Date(issue.created_at)} locale=\"en-US\" />\r\n      </Info>\r\n      <Details>{issue.body}</Details>\r\n    </DetailContainer>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { getTotalPagesAsync } from \"./store/issuesSlice\";\n\nimport Issues from \"./pages/Issues\";\nimport IssuesDetails from \"./pages/IssuesDetails\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getTotalPagesAsync());\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/issues/:page/details/:id\">\n            <IssuesDetails />\n          </Route>\n          <Route path=\"/issues/:page\">\n            <Issues />\n          </Route>\n          <Route path=\"/\">\n            <Issues />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport issuesReducer from './issuesSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    issues: issuesReducer,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport TimeAgo from \"javascript-time-ago\";\nimport en from \"javascript-time-ago/locale/en\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nTimeAgo.addDefaultLocale(en);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}